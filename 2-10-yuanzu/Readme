  -1.编写一个名为nested_sum的函数，接收一个由内嵌的整数列表组成的列表作为形参，并将内嵌列表中的值全部加起来。
	例如
		>>> t = [[1, 2], [3], [4, 5, 6]]
		>>> nested_sum(t)
		21
	-2.编写一个名为cumsum的函数，接收一个数字的列表，返回累计和；也就是说，返回一个新的列表，其中第i个元素是原先
	列表的前i+1个元素的和。
	例如
		>>> t = [1, 2, 3]
		>>> cumsum(t)
		[1, 3, 6]
	-3.编写一个函数middle，接收一个列表作为形参，并返回一个新的列表，包含除了第一个和最后一个元素之外的所有函数
	例如
		>>> t = [1, 2, 3, 4]
		>>> middle(t)
		[2, 3]
	-4.编写一个名为chop的函数，接收一个列表，修改它，删除它的第一个和最后一个元素，并返回None。例如
		>>> t = [1, 2, 3, 4]
		>>> chop(t)
		>>> t
		[2, 3]
